/* .container {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    background-color: #f0f0f0;
} */



.container {
    /* Remove the existing background properties */
    background: none;
    transition: background 0.3s, color 0.3s;
    margin: 0;
    padding: 0;
    font-family: 'Andada Pro', serif;
    color: rgb(57, 57, 57);
}




.App-header {
    text-align: center;
    padding: 20px;
    border-radius: 5px;
}

.cat-sleeping-gif {
    width: 200px;
    height: auto;
    border-radius: 50%;
}


.cat-breed-container {
    display: flex;
    justify-content: space-around;
    flex-wrap: wrap; /* Allow boxes to wrap to the next line on smaller screens */
}




.cat-breed-box:hover {
    transform: scale(1.05);
}

.cat-breed-box {
    width: 300px;
    min-height: 400px; /* Set a minimum height for the boxes */
    display: flex;
    flex: 1;
    flex-direction: column;
    justify-content: center; /* Vertically center-align content */
    align-items: center; /* Horizontally center-align content */
    text-align: center;
    margin: 20px;
    padding: 20px;
    border: 1px solid #ccc;
    border-radius: 5px;
    text-decoration: none;
    color: #333;
    transition: transform 0.2s;
}

.cat-breed-image {
    width: 100px;
    height: auto;
    border-radius: 50%;
}

.cat-breed-content {
    display: flex;
    flex-direction: column;
    align-items: center;
}





/* Add media queries for smaller screens */
@media screen and (max-width: 768px) {
    .cat-breed-container {
        flex-wrap: wrap; /* Allow boxes to wrap to the next line on smaller screens */
    }

    .cat-breed-box {
        flex: 0 0 calc(50% - 20px); /* Two boxes per row with some margin in between */
        margin: 10px; /* Add spacing between boxes */
    }
}








/* for future use for chatbot if decide to integrate */
.svelte-app-frame {
    width: 100%; /* Adjust the width as needed */
    height: 700px; /* Adjust the height as needed */
    border: none; /* Remove the default border */
}










/* for dark mode toggle face */

.toggleBox {
    max-width: 329px;
    padding: 1%;
    overflow: hidden;
    position: relative;
    margin: 0 auto;
    top: 11px;
    left: 705px;
} 
  

   .footer {  
    position: fixed;  
    bottom: 0;  
    right: 15px;  
   }  
   .toggleBar {  
    width: 30%;  
    padding-bottom: 20%;  
    background-color: #6e6e6e;  
    float: left;  
    position: relative;  
    margin-left: 35%;  
    transition: all 0.6s ease-out;  
   }  
   .toggleBar::before {  
    content: "";  
    width: 60%;  
    position: absolute;  
    background-color: #6e6e6e;  
    top: 0;  
    left: -30%;  
    height: 100%;  
    border-radius: 50% 0 0 50%;  
    transition: all 0.6s ease-out;  
   }  
   .toggleBar::after {  
    content: "";  
    width: 60%;  
    position: absolute;  
    background-color: #6e6e6e;  
    top: 0;  
    right: -30%;  
    height: 100%;  
    border-radius: 0 50% 50% 0;  
    transition: all 0.6s ease-out;  
   }  
   .ball {  
    width: 60%;  
    padding-bottom: 60%;  
    position: absolute;  
    background-color: white;  
    top: 5%;  
    left: -25%;  
    border-radius: 50%;  
    box-shadow: 0px 2px 8px #999;  
    overflow: hidden;  
    z-index: 1;  
    transition: all 0.6s ease-in;  
   }  
   .ballGradient {  
    background-image: radial-gradient(circle at 80% 20%, white 0%, #FFF 30%, #DDD 80%);  
   }  
   /* face component */  
   .face {  
    width: 50%;  
    padding-bottom: 50%;  
    position: absolute;  
    top: 30%;  
    left: 25%;  
    /*  border:1px solid red; */  
   }  
   .faceSleep {  
    left: 15%;  
    transition: all 0.3s ease-in 0.3s;  
   }  
   .faceAwake {  
    left: 35%;  
    transition: all 0.3s ease-in 0s;  
    transform: translateX(-200%);  
   }  
   .face .eyes {  
    width: 30%;  
    height: 30%;  
    /*  border:1px solid red; */  
    position: absolute;  
    top: 20%;  
    overflow: hidden;  
   }  
   .face .eyesLeft {  
    left: 5%;  
   }  
   .face .eyesRight {  
    right: 5%;  
   }  
   .faceAwake .eyesLeft {  
    left: 0%;  
   }  
   .faceAwake .eyesRight {  
    right: 0%;  
   }  
   .faceSleep .eyes {  
    top: 40%;  
   }  
   .faceSleep .eyesBall {  
    width: 80%;  
    height: 80%;  
    position: absolute;  
    border-radius: 50%;  
    background-color: #8f8f8f;  
    top: -45%;  
    /*  border:5% solid #8f8f8f; */  
   }  
   .faceAwake .eyesBall {  
    width: 60%;  
    height: 65%;  
    position: absolute;  
    border-radius: 50%;  
    background-color: #8f8f8f;  
    top: 5%;  
    /*  border:5% solid #8f8f8f; */  
   }  
   .face .mouth {  
    width: 100%;  
    height: 30%;  
    /*  border:1px solid red; */  
    position: absolute;  
    left: 0%;  
    bottom: 0%;  
    overflow: hidden;  
   }  
   .faceSleep .mouthLips {  
    width: 20%;  
    height: 40%;  
    background-color: #8f8f8f;  
    position: absolute;  
    top: -10%;  
    left: 35%;  
    border-radius: 50%;  
   }  
   .faceAwake .mouthLips {  
    width: 60%;  
    padding-bottom: 45%;  
    background-color: #337aff;  
    position: absolute;  
    top: -60%;  
    left: 12.5%;  
    border-radius: 50%;  
    box-shadow: inset 0px 9px 9px rgba(115, 115, 115, 0.5);  
   }  
   .faceSleep .mouth {  
    bottom: -10%;  
   }  
   .faceAwake .mouth {  
    bottom: 10%;  
   }  
   /* transition */  
   .checkbox:checked ~ .toggleBar, .checkbox:checked ~ .toggleBar::before,  
   .checkbox:checked ~ .toggleBar::after {  
    background-color: #337aff;  
    
   }  
   .checkbox:checked ~ .toggleBar .ball {  
    transform: translateX(150%);  
   }  
   .checkbox:checked ~ .toggleBar .faceSleep {  
    transform: translateX(200%);  
    transition-delay: 0;  
    
    transition: all 0.3s ease-out 0s;  
   }  
   .checkbox:checked ~ .toggleBar .faceAwake {  
    transform: translateX(0);  
    transition-delay: 0;  
    transition: all 0.3s ease-out 0.3s;  
   }  


   .checkbox
   {

    position: absolute;
    opacity: 0;
    z-index: -1;
   }



   
body.dark {
    background: linear-gradient(to bottom, #222, #333);
    color: #fff;
    /* Add other dark mode styles as needed */
}

/* Add a style for text in dark mode */
body.dark .cat-breed-box h3,
body.dark .cat-breed-box p {
    color: #fff; /* Text color set to white in dark mode */
}







body {
    transition: 0.3s;
    margin: 0;
    padding: 0;
    background: linear-gradient(to bottom, #bd2bfc, #f5c1a0);
    font-family: 'Andada Pro', serif;
    color: rgb(57, 57, 57);
    position: relative; /* Required for absolute positioning of ::before pseudo-element */
    z-index: 1; /* Ensure the main content is above the pseudo-element */
}

/* Create a pseudo-element to hold the 3D asset */
body::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: url('./images/cat.jpg') no-repeat top center fixed;
    background-size: cover;
    opacity: 0.5; /* Adjust the opacity as needed */
    z-index: -1; /* Place the pseudo-element behind the content */

}

body.dark::before {
    /* Adjust the background for dark mode if needed */
    background: linear-gradient(to bottom, #222, #333);
}






 /* Add other styles before dark mode styles if needed */



/* body {
    transition: background 0.3s, color 0.3s;
    margin: 0;
    padding: 0;
    background: linear-gradient(to bottom, #bd2bfc, #f5c1a0);
    font-family: 'Andada Pro', serif;
    color: rgb(57, 57, 57);
}  */

/* body {
    transition: 0.3s;
    margin: 0;
    padding: 0;
    background-color: rgb(241, 239, 239);
    font-family: 'Andada Pro', serif;
    color: rgb(57, 57, 57);
} */
